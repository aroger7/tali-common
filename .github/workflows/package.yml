name: Build, package and cache a serverless npm application

on:
  workflow_call:
    inputs:
      env:
        description: The environment name
        required: true
        type: string
      installPath:
        description: Path to attempt installing npm dependencies in
        default: src
        type: string
      buildPath:
        description: Path to pass to serverless package command
        default: src
        type: string
      dependenciesKeyDescriptor:
        description: Descriptor string to insert into cache key for npm dependencies
        default: dependencies
        type: string
      dependenciesHashPath:
        description: Path to file to use as a hash for the npm dependencies cache key
        default: package-lock.json
        type: string
      artifactPath:
        description: Path to build artifacts to be cached
        default: dist
        type: string
      artifactKeyDescriptor:
        description: Descriptor to insert into build artifact cache key
        default: build-artifact
        type: string
      artifactHashPath:
        description: Path to file to use as a hash for the build artifact cache key
        default: serverless.yml
        type: string
    secrets:
      serverlessAccessKey:
        description: Serverless access key
        required: true
    outputs:
      artifactCacheKey:
        description: Cache key generated for build artifacts
        value: ${{ jobs.package.outputs.artifactCacheKey }}
      dependenciesCacheKey:
        description: Cache key generated for dependencies
        value: ${{ jobs.package.outputs.dependenciesCacheKey}}

env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.serverlessAccessKey }}

jobs:
  package:
    name: Package application
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    outputs:
      artifactCacheKey: ${{ steps.set-artifact-cache-key.outputs.key }}
      dependenciesCacheKey: ${{ steps.set-dependencies-cache-key.outputs.key }}
    steps:
      - run: echo $GITHUB_WORKSPACE
      - run: echo ${{ hashFiles('abc123') }}
      - run: echo ${{ format('{0}', hashFiles(format('{0}', inputs.artifactHashPath))) }}
      - id: set-artifact-cache-key
        run: echo ::set-output name=key::${{ runner.os }}-${{ inputs.artifactKeyDescriptor }}-${{ hashFiles(format('{0}', inputs.artifactHashPath)) }}
      - id: set-dependencies-cache-key
        run: echo ::set-output name=key::${{ runner.os }}-${{ inputs.dependenciesKeyDescriptor }}-${{ hashFiles(format('{0}', inputs.dependenciesHashPath)) }}
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules
          # key: ${{ runner.os }}-${{inputs.dependenciesKeyDescription}}-${{ hashFiles(inputs.dependenciesHashPath) }}
          key: ${{ steps.set-dependencies-cache-key.outputs.key }}
      - run: npm ci
        if: ${{ !steps.cache-dependencies.outputs.cache-hit }}
        working-directory: ${{ inputs.installPath }}
      - id: cache-build-artifacts
        uses: actions/cache@v2
        with:
          path: ${{ inputs.artifactPath }}
          key: ${{ steps.set-artifact-cache-key.outputs.key }}
          # key: ${{ runner.os }}-${{ inputs.artifactKeyDescription }}-${{ hashFiles(inputs.artifactHashPath) }}
      - run: npx serverless package --stage ${{ inputs.env }}
        if: ${{ !steps.cache-build-artifacts.outputs.cache-hit }}
        working-directory: ${{ inputs.buildPath }}