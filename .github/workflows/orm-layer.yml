name: CI/CD for ORM layer
on:
  push:
    branches:
      - master
      - dev
    paths:
      - 'layers/orm-layer/**'
  workflow_dispatch:
env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  # DEPENDENCIES_CACHE_KEY: 

jobs:
  get-env:
    uses: ./.github/workflows/get-job-env.yml

  build:
    needs: [get-env]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-dependencies.yml
        with:
          cache-key: ${{ runner.os }}-npm-dependencies-${{ hashFiles('layers/orm-layer/nodejs/package-lock.json') }}
        # working-directory: layers/orm-layer/nodejs
      # - uses: ./.github/actions/build-serverless.yml


  # package:
  #   needs: [get-env]
  #   uses: ./.github/workflows/package.yml
  #   with:
  #     env: ${{ needs.get-env.outputs.env }}
  #     installPath: layers/orm-layer/nodejs
  #     buildPath: layers/orm-layer
  #     dependenciesHashPath: layers/orm-layer/nodejs/package-lock.json
  #     artifactPath: layers/orm-layer/.serverless
  #     artifactHashPath: layers/orm-layer/serverless.yml
  #   secrets:
  #     serverlessAccessKey: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  
  # deploy:
  #   name: Deploy ORM models to layer
  #   runs-on: ubuntu-latest
  #   needs: [run-db-updates]
  #   environment: ${{ env.BRANCH_NAME }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - uses: nelonoel/branch-name@v1.0.1
  #     - uses: actions/cache@v2
  #       if: ${{ !env.ACT }}
  #       with:
  #         path: layers/orm-layer/.serverless
  #         key: ${{ runner.os }}-${{ hashFiles('layers/orm-layer/serverless.yml') }}
  #     - run: npx serverless deploy --stage ${{ env.BRANCH_NAME }}

  run-db-updates:
    name: Run DB migrations and seed scripts
    needs: [get-env, build]
    runs-on: ubuntu-latest
    environment: ${{ needs.get-env.outputs.env }}
    defaults:
      run:
        working-directory: layers/orm-layer/nodejs
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ needs.package.outputs.dependenciesCacheKey }}
      - uses: actions/cache@v2
        with:
          path: layers/orm-layer/.serverless
          key: ${{ needs.package.outputs.artifactCacheKey }}
      - name: Get env DB secret
        uses: say8425/aws-secrets-manager-actions@v2
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          SECRET_NAME: ${{ secrets.SECRET_NAME }}
      - run: npx sequelize-cli db:migrate --env ${{ needs.get-env.outputs.env }}
        working-directory: layers/orm-layer/nodejs/db
      - run: npx sequelize-cli db:seed --env ${{ needs.get-env.outputs.env }}
        working-directory: layers/orm-layer/nodejs/db
