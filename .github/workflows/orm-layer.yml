name: CI/CD for ORM layer
on:
  push:
    branches:
      - master
      - dev
    paths:
      - 'layers/orm-layer/**'
  workflow_dispatch:
env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }} 

jobs:
  config:
    name: Configure workflow environment values
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.output.outputs.env }}
      dependencies-cache-key: ${{ steps.output.outputs.dependencies-cache-key }}
      build-artifacts-cache-key: ${{ steps.output.outputs.build-artifacts-cache-key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1
      - name: Set outputs
        id: output
        run: |
          echo ::set-output name=env::${{ env.BRANCH_NAME }}
          echo ::set-output name=dependencies-cache-key::${{ runner.os }}-npm-dependencies-cache-${{ hashFiles('layers/orm-layer/nodejs/package-lock.json') }}
          echo ::set-output name=build-artifacts-cache-key::${{ runner.os }}-build-artifact-cache-${{ hashFiles('layers/orm-layer/serverless.yml')}}

  build:
    name: Install dependencies and package layer
    needs: [config]
    runs-on: ubuntu-latest
    environment: ${{ needs.config.outputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          cache-key: ${{ needs.config.outputs.dependencies-cache-key }}
          path: layers/orm-layer/nodejs
      - name: Package layer
        uses: ./.github/actions/build-serverless
        with:
          output-path: layers/orm-layer/.serverless
          working-path: layers/orm-layer
          cache-key: ${{ needs.config.outputs.build-artifacts-cache-key }}
          stage: ${{ needs.get-env.outputs.env }}
          serverlessAccessKey: ${{ secrets.SERVERLESS_ACCESS_KEY }}

  run-db-updates:
    name: Run DB migrations and seed scripts
    needs: [config, build]
    runs-on: ubuntu-latest
    environment: ${{ needs.config.outputs.env }}
    defaults:
      run:
        working-directory: layers/orm-layer/nodejs
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          cache-key: ${{ needs.config.outputs.dependencies-cache-key }}
          path: layers/orm-layer/nodejs
      - name: Add public ip to AWS security group
        uses: sohelamin/aws-security-group-add-ip-action@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          aws-security-group-id: ${{ secrets.AWS_DB_BASTION_SECURITY_GROUP_ID }}
          port: 22
          description: ORM layer CI/CD workflow
      - name: Get env DB secret
        uses: say8425/aws-secrets-manager-actions@v2
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          SECRET_NAME: ${{ secrets.SECRET_NAME }}
      # - name: Adding Known Hosts
      #   run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AWS_DB_BASTION_SSH_PRIVATE_KEY }}
          known_hosts: "placeholder"
          name: github-actions
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.AWS_DB_BASTION_HOST }} >> ~/.ssh/known_hosts
      - run: ls -a
        working-directory: ~/.ssh
      - name: Open ssh tunnel
        run: ssh -T -i github-actions ${{ secrets.AWS_DB_BASTION_USERNAME }}@${{ secrets.AWS_DB_BASTION_HOST }}
      - name: Set branch env var for sequelize config to pick up
        run: echo "BRANCH_NAME=${{ needs.config.outputs.env }}" >> $GITHUB_ENV
      - name: Run migrations
        run: npx sequelize-cli db:migrate --env ${{ needs.config.outputs.env }}
        working-directory: layers/orm-layer/nodejs/db
      - name: Run seeds
        run: npx sequelize-cli db:seed --env ${{ needs.config.outputs.env }}
        working-directory: layers/orm-layer/nodejs/db

  deploy:
    name: Deploy ORM models to layer
    runs-on: ubuntu-latest
    needs: [config, run-db-updates]
    environment: ${{ needs.config.outputs.env }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Get build artifact
        uses: ./.github/actions/build-serverless
        with:
          output-path: layers/orm-layer/.serverless
          working-path: layers/orm-layer
          cache-key: ${{ needs.config.outputs.build-artifacts-cache-key }}
          stage: ${{ needs.get-env.outputs.env }}
          serverlessAccessKey: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      - run: npx serverless deploy --stage ${{ needs.config.outputs.env }}
        working-directory: layers/orm-layer
